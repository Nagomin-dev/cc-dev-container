name: Bot Comment Notification

# このワークフローはSlack Bot Tokenを使用して通知を送信します
# Webhook URLバージョンから移行する場合:
# 1. Slack Appを作成し、chat:write, chat:write.publicスコープを付与
# 2. Bot User OAuth TokenをGitHub Secretsに SLACK_BOT_TOKEN として保存
# 3. 環境変数でチャンネルIDを設定（SLACK_CHANNEL_ID）

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: read
  pull-requests: read

env:
  # デフォルトのSlackチャンネルID（環境変数またはGitHub Variables で上書き可能）
  SLACK_CHANNEL_ID: ${{ vars.SLACK_CHANNEL_ID || 'C1234567890' }}

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    # PRまたはIssueへのコメントで、CodeRabbitまたはGitHub Actionsボットからのコメントのみを対象とする
    if: |
      (github.event.issue.pull_request || github.event.issue) &&
      (contains(github.event.comment.user.login, 'coderabbit') ||
       github.event.comment.user.login == 'github-actions[bot]')

    steps:
      - name: Determine bot type
        id: bot-type
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          set -euo pipefail
          # ボットのタイプを判定
          if [[ "${{ github.event.comment.user.login }}" == "github-actions[bot]" ]]; then
            # コメント内容からClaude Code Actionかどうかを判定
            if echo "$COMMENT_BODY" | grep -qiE "(Claude|Anthropic|claude-code-action)"; then
              echo "bot_name=Claude Code Action" >> $GITHUB_OUTPUT
              echo "bot_icon=🤖" >> $GITHUB_OUTPUT
              echo "bot_color=#6366F1" >> $GITHUB_OUTPUT
            else
              echo "bot_name=GitHub Actions Bot" >> $GITHUB_OUTPUT
              echo "bot_icon=⚙️" >> $GITHUB_OUTPUT
              echo "bot_color=#808080" >> $GITHUB_OUTPUT
            fi
          elif [[ "${{ github.event.comment.user.login }}" =~ "coderabbit" ]]; then
            echo "bot_name=CodeRabbit" >> $GITHUB_OUTPUT
            echo "bot_icon=🐰" >> $GITHUB_OUTPUT
            echo "bot_color=#FF6B6B" >> $GITHUB_OUTPUT
          else
            echo "bot_name=Unknown Bot" >> $GITHUB_OUTPUT
            echo "bot_icon=🤷" >> $GITHUB_OUTPUT
            echo "bot_color=#808080" >> $GITHUB_OUTPUT
          fi

      - name: Extract comment preview
        id: comment-preview
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          set -euo pipefail
          # コメントの最初の500文字を抽出（Slack表示用）
          # 改行を空白に変換し、500文字に制限
          PREVIEW=$(echo "$COMMENT_BODY" | tr '\n' ' ' | cut -c1-500)
          if [ ${#COMMENT_BODY} -gt 500 ]; then
            PREVIEW="${PREVIEW}..."
          fi
          # GitHub Outputに安全に出力するためにエスケープ
          echo "preview<<EOF" >> $GITHUB_OUTPUT
          echo "$PREVIEW" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "${{ steps.bot-type.outputs.bot_icon }} ${{ steps.bot-type.outputs.bot_name }} commented on ${{ github.event.issue.pull_request && 'PR' || 'Issue' }} #${{ github.event.issue.number }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*${{ steps.bot-type.outputs.bot_icon }} ${{ steps.bot-type.outputs.bot_name }} がコメントしました*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*リポジトリ:*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*${{ github.event.issue.pull_request && 'プルリクエスト' || 'イシュー' }}:*\n<${{ github.event.issue.html_url }}|#${{ github.event.issue.number }} ${{ github.event.issue.title }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*ボット:*\n`${{ github.event.comment.user.login }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*作成日時:*\n${{ github.event.comment.created_at }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*コメント内容:*\n```${{ steps.comment-preview.outputs.preview }}```"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "コメントを見る",
                        "emoji": true
                      },
                      "url": "${{ github.event.comment.html_url }}",
                      "style": "primary"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ github.event.issue.pull_request && 'PR' || 'Issue' }}を開く",
                        "emoji": true
                      },
                      "url": "${{ github.event.issue.html_url }}"
                    }
                  ]
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "${{ github.event.repository.full_name }} • ${{ github.event.comment.author_association }}"
                    }
                  ]
                }
              ],
              "attachments": [
                {
                  "color": "${{ steps.bot-type.outputs.bot_color }}",
                  "footer": "GitHub Actions Bot Comment Notifier",
                  "footer_icon": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
                  "ts": "${{ github.event.comment.created_at }}"
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
